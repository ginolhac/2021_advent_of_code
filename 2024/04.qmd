---
format: html
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(adventdrob) # dgrtwo/adventdrob
```


## Part 1

```{r}
tibble(x = read_lines("
MMMSXXMASM
MSAMXMSMSA
AMXSXMAAMM
MSAMASMSMX
XMASAMXAMM
XXAMMXXAMA
SMSMSASXSS
SAXAMASAAA
MAMMMXMMMM
MXMXAXMASX")) -> input

#input <- read_lines("input/04")

input |> 
  grid_tidy(x) |>
  adjacent_join() -> input_adjacent 
# All X followed by a M
input_adjacent |> 
  filter(value == "X", value2 == "M") -> XM

semi_join(input_adjacent, XM, 
          by = join_by(value == value2, row == row2, col == col2)) |> 
  filter(value == "M", value2 == "A") -> XMA


semi_join(input_adjacent, XMA, 
          by = join_by(value == value2, row == row2, col == col2)) |> 
  filter(value == "A", value2 == "S")

```


```{r}
library(stringi)
read_lines("MMMSXXMASM
MSAMXMSMSA
AMXSXMAAMM
MSAMASMSMX
XMASAMXAMM
XXAMMXXAMA
SMSMSASXSS
SAXAMASAAA
MAMMMXMMMM
MXMXAXMASX") -> input

str_transpose <- function(x) {
  tibble(x = x) |> 
    grid_matrix(var = x) |> 
    # turn the matrix 90 degrees
    t() |> 
    apply(MARGIN = 1, paste, collapse = '')
}

mat <- tibble(x = input) |> 
    grid_matrix(var = x)

for (i in ncol(mat):1) {
  j <- 1
  for (j in seq_along(ncol(mat) - 1)) {
    print(paste(i, j, mat[i, j]))
  }
  j <- j + 1
}
  


# horizontal
sum(stri_count_fixed(input, "XMAS")) +
  sum(stri_count_fixed(stri_reverse(input), "XMAS")) +
  # vertical
  sum(stri_count_fixed(str_transpose(input), "XMAS")) +
  sum(stri_count_fixed(stri_reverse(str_transpose(input)), "XMAS"))
```


