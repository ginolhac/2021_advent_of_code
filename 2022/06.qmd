---
title: "06"
format: html
---


```{r}
#| label: setup
#| include: false
library(tidyverse)
```

- Part One



```{r}
read_lines("input/06") |> 
  #"bvwbjplbgvbhsrlpgdmjqwftvncz" |> 
  str_split("") |> 
  pluck(1) -> signal
```


```{r}
for (i in 4:length(signal)) {
  trigger <- any(duplicated(signal[(i - 3):i]))
  if (!trigger) {
    message(paste(i))
    break
  }
  #print(signal[(i - 3):i])
}
```

- Part Two

```{r}
for (i in 14:length(signal)) {
  trigger <- any(duplicated(signal[(i - 13):i]))
  if (!trigger) {
    message(paste(i))
    break
  }
}
```




Create groups based on changed in the `rle` sequences

```{r}
create_ruptur_groups <- function(x) {
  counter <- 1L
  vec_group <- vector(mode = "integer", length = length(x))
  shifted <- lag(x, default = 1L)
  for (i in seq_along(x)) {
    if (x[i] != shifted[i]) counter <- counter + 1L
    vec_group[i] <- counter
  }
  vec_group
}

```



```{r}
unclass(signal_rle) |> 
  as_tibble() |> 
  uncount(weights = lengths, .remove = FALSE) |> 
  mutate(unrepeated  = if_else(lengths == 1L, 1L, 0L),
         id = create_ruptur_groups(unrepeated)) |> 
  group_by(id) |> 
  mutate(sum_unrepeated = cumsum(unrepeated))
```



- Part Two

```{r}
create_ruptur_groups <- function(x) {
  counter <- 1L
  vec_group <- vector(mode = "integer", length = length(x))
  shifted <- lag(x, default = 1L)
  for (i in seq_along(x)) {
    if (x[i] != shifted[i]) counter <- counter + 1L
    vec_group[i] <- counter
  }
  vec_group
}
create_ruptur_groups(test)

```


